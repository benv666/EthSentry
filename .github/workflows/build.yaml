name: Build EthSentry

on: [push, pull_request]
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goarch: [amd64, arm64]
        exclude:
          - os: windows-latest
            goarch: arm64

    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Setup
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'

      - name: Build
        shell: bash
        run: |
          # Map OS to GOOS
          case "${{ matrix.os }}" in
            ubuntu-latest) GOOS=linux ;;
            macos-latest)  GOOS=darwin ;;
            windows-latest) GOOS=windows ;;
          esac

          EXT=""
          [[ "$GOOS" == "windows" ]] && EXT=".exe"

          mkdir -p build
          env GOOS=$GOOS GOARCH=${{ matrix.goarch }} go build -o build/eth-sentry${EXT} ./cmd/eth-sentry

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}_${{ matrix.goarch }}
          path: build/

